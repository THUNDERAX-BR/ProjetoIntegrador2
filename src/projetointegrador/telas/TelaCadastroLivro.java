/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package projetointegrador.telas;

import projetointegrador.objects.Categorias;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import projetointegrador.dao.AutoresDAO;
import projetointegrador.dao.CategoriasDAO;
import projetointegrador.dao.Conector;
import projetointegrador.dao.EditorasDAO;
import projetointegrador.dao.LivrosDAO;
import projetointegrador.objects.Livros;
import tools.GlobalListener;

/**
 *
 * @author Gato Sagrado
 */
public class TelaCadastroLivro extends javax.swing.JPanel {

    int id;
    private GlobalListener listener;
    private File imagem;
    List<Categorias> categoriasSelecionadas = new ArrayList<>();
    List<JButton> botoesCategorias = new ArrayList<>();

    /**
     * Creates new form CadastroLivro
     */
    public TelaCadastroLivro(GlobalListener origem, int id) {
        initComponents();
        this.id = id;
        this.listener = origem;
        atualizar();
        atualizarBotoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LbTitulo = new javax.swing.JLabel();
        BtFechar = new javax.swing.JButton();
        TxTitulo = new javax.swing.JTextField();
        LbAno = new javax.swing.JLabel();
        TxAno = new javax.swing.JFormattedTextField();
        LbAutor = new javax.swing.JLabel();
        LbEditora = new javax.swing.JLabel();
        LbSinopse = new javax.swing.JLabel();
        PnSinopse = new javax.swing.JScrollPane();
        TxSinopse = new javax.swing.JTextArea();
        CbAutor = new javax.swing.JComboBox<>();
        CbEditora = new javax.swing.JComboBox<>();
        PnCapa = new javax.swing.JPanel();
        LbCapa = new javax.swing.JLabel();
        BtCapa = new javax.swing.JButton();
        LbCaminho = new javax.swing.JLabel();
        PnCategorias = new javax.swing.JPanel();
        BtCategorias = new javax.swing.JButton();
        LbCategorias = new javax.swing.JLabel();
        PnCategoriasS = new javax.swing.JPanel();
        CbCategoria = new javax.swing.JComboBox<>();
        BtSalvar = new javax.swing.JButton();

        setBackground(new java.awt.Color(186, 186, 186));
        setMaximumSize(new java.awt.Dimension(1240, 1024));
        setMinimumSize(new java.awt.Dimension(1240, 1024));
        setPreferredSize(new java.awt.Dimension(1240, 1024));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LbTitulo.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        LbTitulo.setLabelFor(TxTitulo);
        LbTitulo.setText("Título:");
        add(LbTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        BtFechar.setBackground(new java.awt.Color(109, 37, 172));
        BtFechar.setFont(new java.awt.Font("Arial", 0, 75)); // NOI18N
        BtFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iconXis2.png"))); // NOI18N
        BtFechar.setToolTipText("Volta para a tela anterior");
        BtFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtFecharActionPerformed(evt);
            }
        });
        add(BtFechar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1135, 20, 85, 85));

        TxTitulo.setBackground(new java.awt.Color(153, 114, 188));
        TxTitulo.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        TxTitulo.setToolTipText("Insira o título do livro");
        TxTitulo.setMargin(new java.awt.Insets(2, 15, 2, 15));
        add(TxTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 125, 950, -1));

        LbAno.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        LbAno.setLabelFor(TxAno);
        LbAno.setText("Ano:");
        add(LbAno, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        TxAno.setBackground(new java.awt.Color(153, 114, 188));
        TxAno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####"))));
        TxAno.setToolTipText("Insira o ano de publicação do livro, apenas 4 dígitos");
        TxAno.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        TxAno.setMargin(new java.awt.Insets(2, 15, 2, 15));
        add(TxAno, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 225, 950, -1));

        LbAutor.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        LbAutor.setLabelFor(CbAutor);
        LbAutor.setText("Autor:");
        add(LbAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, -1));

        LbEditora.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        LbEditora.setLabelFor(CbEditora);
        LbEditora.setText("Editora:");
        add(LbEditora, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        LbSinopse.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        LbSinopse.setLabelFor(TxSinopse);
        LbSinopse.setText("Sinopse:");
        add(LbSinopse, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, -1, -1));

        PnSinopse.setBackground(new java.awt.Color(153, 114, 188));
        PnSinopse.setBorder(null);
        PnSinopse.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TxSinopse.setBackground(new java.awt.Color(153, 114, 188));
        TxSinopse.setColumns(20);
        TxSinopse.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        TxSinopse.setLineWrap(true);
        TxSinopse.setRows(5);
        TxSinopse.setToolTipText("Insira a sinopse do livro");
        TxSinopse.setWrapStyleWord(true);
        TxSinopse.setMaximumSize(new java.awt.Dimension(955, 1000000000));
        TxSinopse.setMinimumSize(new java.awt.Dimension(940, 150));
        PnSinopse.setViewportView(TxSinopse);

        add(PnSinopse, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 525, 950, 175));

        CbAutor.setBackground(new java.awt.Color(153, 114, 188));
        CbAutor.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        CbAutor.setToolTipText("Selecione o autor na lista");
        add(CbAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 325, 950, -1));

        CbEditora.setBackground(new java.awt.Color(153, 114, 188));
        CbEditora.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        CbEditora.setToolTipText("Selecione a editora na lista");
        add(CbEditora, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 425, 950, -1));

        PnCapa.setBackground(new java.awt.Color(144, 144, 144));
        PnCapa.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LbCapa.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        LbCapa.setLabelFor(TxTitulo);
        LbCapa.setText("Capa:");
        PnCapa.add(LbCapa, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, -1, -1));

        BtCapa.setBackground(new java.awt.Color(144, 144, 144));
        BtCapa.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        BtCapa.setForeground(new java.awt.Color(109, 37, 172));
        BtCapa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iconMais.png"))); // NOI18N
        BtCapa.setToolTipText("Seleciona o caminho da imagem");
        BtCapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCapaActionPerformed(evt);
            }
        });
        PnCapa.add(BtCapa, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 70));

        LbCaminho.setFont(new java.awt.Font("Arial", 0, 50)); // NOI18N
        LbCaminho.setLabelFor(TxTitulo);
        LbCaminho.setText("Selecione uma imagem");
        PnCapa.add(LbCaminho, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, -1, -1));

        add(PnCapa, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 725, 1200, 70));

        PnCategorias.setBackground(new java.awt.Color(144, 144, 144));
        PnCategorias.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtCategorias.setBackground(new java.awt.Color(144, 144, 144));
        BtCategorias.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        BtCategorias.setForeground(new java.awt.Color(109, 37, 172));
        BtCategorias.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iconMais.png"))); // NOI18N
        BtCategorias.setToolTipText("Adiciona uma categoria");
        BtCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCategoriasActionPerformed(evt);
            }
        });
        PnCategorias.add(BtCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 70));

        LbCategorias.setFont(new java.awt.Font("Arial", 0, 60)); // NOI18N
        LbCategorias.setLabelFor(TxTitulo);
        LbCategorias.setText("Categorias:");
        PnCategorias.add(LbCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, -1, -1));

        PnCategoriasS.setBackground(new java.awt.Color(144, 144, 144));
        PnCategoriasS.setMaximumSize(new java.awt.Dimension(1200, 125));
        PnCategoriasS.setMinimumSize(new java.awt.Dimension(1200, 100));
        PnCategoriasS.setPreferredSize(new java.awt.Dimension(1200, 100));
        PnCategoriasS.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        PnCategorias.add(PnCategoriasS, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1200, 115));

        CbCategoria.setBackground(new java.awt.Color(153, 114, 188));
        CbCategoria.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        CbCategoria.setToolTipText("Selecione a editora na lista");
        PnCategorias.add(CbCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 0, 430, 70));

        add(PnCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 820, 1200, 185));

        BtSalvar.setBackground(new java.awt.Color(109, 37, 172));
        BtSalvar.setFont(new java.awt.Font("Segoe UI", 0, 60)); // NOI18N
        BtSalvar.setText("SALVAR");
        BtSalvar.setToolTipText("Salva os campos");
        BtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtSalvarActionPerformed(evt);
            }
        });
        add(BtSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 20, 250, 85));
    }// </editor-fold>//GEN-END:initComponents

    private void BtFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtFecharActionPerformed
        TelaPrincipal.voltarPainel();
    }//GEN-LAST:event_BtFecharActionPerformed

    private void BtCapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCapaActionPerformed
        JFileChooser select = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Imagens (*.jpg, *.jpeg, *.png)", "jpg", "jpeg", "png");
        select.setFileFilter(filtro);
        select.setAcceptAllFileFilterUsed(false);
        int confirmador = select.showOpenDialog(null);
        if (confirmador == JFileChooser.APPROVE_OPTION) {
            imagem = select.getSelectedFile();
            LbCaminho.setText(imagem.getName());
        }
    }//GEN-LAST:event_BtCapaActionPerformed

    private void BtCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCategoriasActionPerformed
        String item = (String) CbCategoria.getSelectedItem();
        String[] itemDividido = item.split("/");
        Categorias categoria = new Categorias(Integer.parseInt(itemDividido[0]), itemDividido[1]);
        boolean existe = false;
        for (Categorias cat : categoriasSelecionadas) {
            if (cat.getId() == categoria.getId()) {
                existe = true;
            }
        }
        if (!existe) {
            categoriasSelecionadas.add(categoria);
            atualizarBotoes();
        } else {
            JOptionPane.showMessageDialog(this, "Categoria já adicionada.");
        }
    }//GEN-LAST:event_BtCategoriasActionPerformed

    private void BtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtSalvarActionPerformed
        if (!TxTitulo.getText().isEmpty() && !TxAno.getText().isEmpty() && !TxSinopse.getText().isEmpty() && CbAutor.getSelectedIndex() != -1 && CbEditora.getSelectedIndex() != -1) {
            try {
                String item = (String) CbAutor.getSelectedItem();
                String[] itemDividido = item.split("/");
                int idAutor = Integer.parseInt(itemDividido[0]);
                item = (String) CbEditora.getSelectedItem();
                itemDividido = item.split("/");
                int idEditora = Integer.parseInt(itemDividido[0]);
                LivrosDAO livrosDao = new LivrosDAO(Conector.conectar());
                if (id == -1) {
                    livrosDao.cadastrar(TxTitulo.getText(), Integer.parseInt(TxAno.getText()), idAutor, idEditora, TxSinopse.getText(), imagem, categoriasSelecionadas);
                    JOptionPane.showMessageDialog(null, "Livro cadastrado.");
                } else {
                    livrosDao.alterar(id, TxTitulo.getText(), Integer.parseInt(TxAno.getText()), idAutor, idEditora, TxSinopse.getText(), imagem, categoriasSelecionadas);
                    JOptionPane.showMessageDialog(null, "Livro alterado.");
                }
                listener.sinalGlobal();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos. Apenas capa é opcional.");
        }
    }//GEN-LAST:event_BtSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtCapa;
    private javax.swing.JButton BtCategorias;
    private javax.swing.JButton BtFechar;
    private javax.swing.JButton BtSalvar;
    private javax.swing.JComboBox<String> CbAutor;
    private javax.swing.JComboBox<String> CbCategoria;
    private javax.swing.JComboBox<String> CbEditora;
    private javax.swing.JLabel LbAno;
    private javax.swing.JLabel LbAutor;
    private javax.swing.JLabel LbCaminho;
    private javax.swing.JLabel LbCapa;
    private javax.swing.JLabel LbCategorias;
    private javax.swing.JLabel LbEditora;
    private javax.swing.JLabel LbSinopse;
    private javax.swing.JLabel LbTitulo;
    private javax.swing.JPanel PnCapa;
    private javax.swing.JPanel PnCategorias;
    private javax.swing.JPanel PnCategoriasS;
    private javax.swing.JScrollPane PnSinopse;
    private javax.swing.JFormattedTextField TxAno;
    private javax.swing.JTextArea TxSinopse;
    private javax.swing.JTextField TxTitulo;
    // End of variables declaration//GEN-END:variables

    private void atualizar() {
        try {
            CbAutor.removeAllItems();
            AutoresDAO autoresDao = new AutoresDAO(Conector.conectar());
            List<String> listaAutores = autoresDao.listarCadastroLivro(id);
            for (String s : listaAutores) {
                CbAutor.addItem(s);
            }
            CbEditora.removeAllItems();
            EditorasDAO editorasDao = new EditorasDAO(Conector.conectar());
            List<String> listaEditoras = editorasDao.listarCadastroLivro(id);
            for (String s : listaEditoras) {
                CbEditora.addItem(s);
            }
            CategoriasDAO categoriasDao = new CategoriasDAO(Conector.conectar());
            List<String> listaCategorias = categoriasDao.listarCadastroLivro();
            for (String s : listaCategorias) {
                CbCategoria.addItem(s);
            }
            CbCategoria.setSelectedIndex(-1);
            if (id != -1) {
                categoriasDao.reconectar(Conector.conectar());
                categoriasSelecionadas = categoriasDao.getCategoriasLivro(id);
                CbAutor.setSelectedIndex(0);
                CbEditora.setSelectedIndex(0);
                LivrosDAO livrosDao = new LivrosDAO(Conector.conectar());
                Livros livro = livrosDao.exibirLivro(id);
                TxTitulo.setText(livro.getTitulo());
                TxAno.setText(String.valueOf(livro.getAno()));
                TxSinopse.setText(livro.getDescricao());
                if (livro.getCapa() != null) {
                    LbCaminho.setText("Sem alteração");
                }
            } else {
                CbAutor.setSelectedIndex(-1);
                CbEditora.setSelectedIndex(-1);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void atualizarBotoes() {
        PnCategoriasS.removeAll();
        botoesCategorias.clear();

        for (Categorias categoria : categoriasSelecionadas) {
            JButton botao = new JButton(categoria.getId() + "/" + categoria.getNome());

            botao.setFont(new Font("Arial", Font.PLAIN, 24));
            botao.setBackground(new Color(109, 37, 172));
            botao.setForeground(Color.BLACK);
            botao.setFocusPainted(false);
            botao.setToolTipText("Clique para remover");

            botao.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    categoriasSelecionadas.remove(categoria);
                    atualizarBotoes();
                    revalidate();
                    repaint();
                }
            });

            botoesCategorias.add(botao);
            PnCategoriasS.add(botao);
        }

        PnCategoriasS.revalidate();
        PnCategoriasS.repaint();
    }
}
